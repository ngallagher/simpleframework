apply plugin: 'java'

version = "6.0.1-2"

sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
if (!hasProperty('mainClass')) {
    //ext.mainClass = 'org.cheetah.webserver.CheetahWebserver'
}
sourceSets.main.java { srcDirs = ["simple/simple-common/src/main/java", "simple/simple-http/src/main/java", "simple/simple-transport/src/main/java"]}

repositories {
    //mavenCentral()
    // You may define additional repositories, or even remove "mavenCentral()".
    // Read more about repositories here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:repositories
}

dependencies {
    // TODO: Add dependencies here ...
    // You can read more about how to add dependency here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:how_to_declare_your_dependencies
    testCompile group: 'junit', name: 'junit', version: '4.10'
        
    //compile fileTree(dir: 'lib', include: '*.jar')
    //runtime fileTree(dir: 'lib', include: '*.jar')
}

task wrapper(type: Wrapper) {
    gradleVersion = "3.5"
}


/*
task packageTests(type: Jar) {
    baseName = 'CheetahWebserverTest'
    manifest {
        attributes(
        "Created-By": 'Philippe Schweitzer',
        "Class-Path": 'lib/' + configurations.compile.collect { it.getName() }.join(' lib/') + ' lib/CheetahWebserver.jar',
        "Main-Class": 'org.cheetah.webserver.CheetahWebserverTest'
        )
    }
    from sourceSets.test.output
}

jar {   
    baseName = 'CheetahWebserver'
    manifest {
        attributes(
        "Created-By": 'Philippe Schweitzer',
        "Class-Path": 'lib/' + configurations.compile.collect { it.getName() }.join(' lib/'),
        "Main-Class": 'org.cheetah.webserver.CheetahWebserver'
        )
    }    
}

build {
    dependsOn packageTests
}

test {
    dependsOn packageTests
}
*/
